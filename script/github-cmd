#!perl

# DATE
# VERSION

use 5.010001;
use strict;
use warnings;

use Perinci::CmdLine::github::cmd;

my $prefix = '/App/github/cmd/';

Perinci::CmdLine::github::cmd->new(
    url => $prefix,
    log => 1,
    pass_cmdline_object => 1,
    config_filename => ["github-cmd.conf"],
    subcommands => {
        'get-user'    => {url => "${prefix}get_user"},

        'get-repo'    => {url => "${prefix}get_repo"},
        'repo-exists' => {url => "${prefix}repo_exists"},
        'list-repos'  => {url => "${prefix}list_repos"},
        'create-repo' => {url => "${prefix}create_repo"},
        'delete-repo' => {url => "${prefix}delete_repo"},
    },
)->run;

# ABSTRACT:
# PODNAME:

=head1 SYNOPSIS

=head2 Setup

In F<~/.config/github-cmd.conf>:

 login = YOUR_GITHUB_LOGIN
 pass  = YOUR_GITHUB_PASSWORD

 # or
 access_token = YOUR_API_TOKEN

or just run C<github-cmd>, which will prompt you login+pass and write them to
configuration.

=head2 User commands

 % github-cmd get-user
 % github-cmd get-user perlancar

=head2 Repo commands

 % github-cmd list-repos
 % github-cmd list-repos -l
 % github-cmd list-repos --start 100

 % github-cmd get-repo perl-App-github-cmd
 % github-cmd get-repo --user perlancar perl-App-github-cmd

 % github-cmd repo-exists perl-App-github-cmd
 1

 % github-cmd repo-exists --user perlancar perl-App-github-cmd-FOO
 0

 % github-cmd create-repo foo


=head1 DESCRIPTION

B<EARLY RELEASE. More subcommands coming soon.>

This is yet another Github CLI, written in Perl using the L<Perinci::CmdLine>
framework and L<Net::GitHub::V3> API client.


=head1 SEE ALSO

L<App::ph> - another GitHub CLI written by TOKUHIROM. It is last released in
2013 and only contains a few subcommands.
